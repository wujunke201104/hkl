name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyze default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install xcpretty
        run: |
          gem install xcpretty  # 确保安装 xcpretty
      - name: Set Default Scheme
        id: set_scheme  # 给这个步骤一个 ID
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "scheme=$default" >> $GITHUB_ENV  # 输出到环境变量
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ env.scheme }}  # 使用环境变量获取方案
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Using scheme: $scheme"
          
          # 检查并设置文件类型和文件名
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; 
          else 
            filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; 
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          
          echo "File to build: $file_to_build"
          
          # 执行构建和分析
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty
